---
import { Icon } from "astro-icon/components";

interface Props {
  encodedEmail: string;
  label?: string;
  iconName?: string;
  class?: string;
}

const {
  encodedEmail = "ZWQub2V0c29wQGhjc3Vhem9jcmFt",
  label = "Email",
  iconName = "icons/envelope-solid",
  class: className = "",
} = Astro.props;
---

<script is:inline>
  // Proper TypeScript-compatible click handler
  function handleEmailClick(e) {
    const target = e.currentTarget;

    // Use the hardcoded value or find another way to pass the encoded email
    const encoded = "ZWQub2V0c29wQGhjc3Vhem9jcmFt"; // or get it from a data attribute

    // Decode and reverse the email
    const decoded = atob(encoded).split("").reverse().join("");

    // Update the link
    target.href = `mailto:${decoded}`;

    // Update the displayed text
    const textEl = target.querySelector(".email-text");
    if (textEl) textEl.textContent = decoded;

    // Programmatically trigger the mailto
    window.location.href = target.href;

  }
</script>

<a
  href="#"
  onclick="handleEmailClick(event); return false;"
  class={`email-link flex items-center gap-3 ${className}`}
  aria-label="Email contact"
>
  <Icon name={iconName} class="icon-small self-center" aria-hidden="true" />
  <span class="email-text">{label}</span>
</a>
