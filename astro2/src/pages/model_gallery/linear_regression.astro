---
import Layout from '../../layouts/Layout.astro';
import Markdown from '../../components/Markdown.astro';
import Content from './markdown/linear_regression.mdx';
import '../../styles/global.css';

const { frontmatter } = await import('./markdown/linear_regression.mdx');
const { title } = frontmatter;

---

<Layout>
    <Markdown title="{title}">
        <Content />
    </Markdown>

    <!-- Regression Simulation  -->
    <script type="module">
        import { Scatter_Plot_Line, RegressionLine } from '/src/scripts/linear_regression.js';

        // Call the function with a container
        Scatter_Plot_Line("#scatter_plot", "#scatter_button", { height: 400 });

        // Function to initialize the chart
        function initializeChart() {
            // Initialize the chart using D3.js or any other library
            RegressionLine("#regression_simulation", { height: 400 });
        }

        // Set up the Intersection Observer
        const observer = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    // Element is in the viewport, initialize the chart
                    initializeChart();
                    // Stop observing after initializing the chart
                    observer.unobserve(entry.target);
                }
            });
        });

        // Start observing the target element
        observer.observe(document.getElementById('regression_simulation'));

        // Add event listener to the refresh button
        document.getElementById('refresh_regression_simulation').addEventListener('click', (event) => {
            event.preventDefault(); // Prevent default behavior
            initializeChart(); // Re-initialize the chart
        });
    </script>
</Layout>